sig3<-summary(wilson)$coef[3,2]
phi1<-rnorm(1, mean = variable1, sd = sig1)
phi2<-rnorm(1, mean = variable2, sd = sig2)
phi3<-rnorm(1, mean = variable3, sd = sig3)
yFit<-phi1/(1+exp(-(phi2+phi3*xFit)))
yFitDerivate<-phi1*phi3*(1+exp(-(phi2+phi3*xFit)))**(-2)*exp(-(phi2+phi3*xFit))
lines(xFit, yFit, col = rgb(54/255,144/255,192/255,0.05))
}
points(Original_Casos$diascasos, Original_Casos$casosAcumul)
plot(Original_Casos$diascasos, Original_Casos$casos,
xlim = xLimit, ylim = yLimit)
lines(xFit, yFitDerivate)
sink()
sink.number()
sink()
#sink("NULL")
for(j in seq(1,50)){
yAleatorio = rnorm(length(casosAcumul),casosAcumul, casosAcumulInc)
#lm(log(y)~x)
#plot(y~x)
#coef(lm(log(y/10000)~x, data = data_to_fit))
# We need initial parameters
wilson<-nls(yAleatorio~phi1/(1+exp(-(phi2+phi3*x))),start=list(phi1=10000,phi2=-3.30,phi3=.2),trace=TRUE)
print(j)
#summary(wilson)
#set parameters
variable1<-summary(wilson)$coef[1,1]
sig1<-summary(wilson)$coef[1,2]
variable2<-summary(wilson)$coef[2,1]
sig2<-summary(wilson)$coef[3,2]
variable3<-summary(wilson)$coef[3,1]
sig3<-summary(wilson)$coef[3,2]
phi1<-rnorm(1, mean = variable1, sd = sig1)
phi2<-rnorm(1, mean = variable2, sd = sig2)
phi3<-rnorm(1, mean = variable3, sd = sig3)
yFit<-phi1/(1+exp(-(phi2+phi3*xFit)))
yFitDerivate<-phi1*phi3*(1+exp(-(phi2+phi3*xFit)))**(-2)*exp(-(phi2+phi3*xFit))
lines(xFit, yFit, col = rgb(54/255,144/255,192/255,0.05))
}
unlink("NULL")
#sink("NULL")
for(j in seq(1,50)){
yAleatorio = rnorm(length(casosAcumul),casosAcumul, casosAcumulInc)
#lm(log(y)~x)
#plot(y~x)
#coef(lm(log(y/10000)~x, data = data_to_fit))
# We need initial parameters
wilson<-nls(yAleatorio~phi1/(1+exp(-(phi2+phi3*x))),start=list(phi1=10000,phi2=-3.30,phi3=.2),trace=TRUE)
print(j)
#summary(wilson)
#set parameters
variable1<-summary(wilson)$coef[1,1]
sig1<-summary(wilson)$coef[1,2]
variable2<-summary(wilson)$coef[2,1]
sig2<-summary(wilson)$coef[3,2]
variable3<-summary(wilson)$coef[3,1]
sig3<-summary(wilson)$coef[3,2]
phi1<-rnorm(1, mean = variable1, sd = sig1)
phi2<-rnorm(1, mean = variable2, sd = sig2)
phi3<-rnorm(1, mean = variable3, sd = sig3)
yFit<-phi1/(1+exp(-(phi2+phi3*xFit)))
yFitDerivate<-phi1*phi3*(1+exp(-(phi2+phi3*xFit)))**(-2)*exp(-(phi2+phi3*xFit))
lines(xFit, yFit, col = rgb(54/255,144/255,192/255,0.05))
}
sink("NULL")
#sink("NULL")
for(j in seq(1,50)){
yAleatorio = rnorm(length(casosAcumul),casosAcumul, casosAcumulInc)
#lm(log(y)~x)
#plot(y~x)
#coef(lm(log(y/10000)~x, data = data_to_fit))
# We need initial parameters
wilson<-nls(yAleatorio~phi1/(1+exp(-(phi2+phi3*x))),start=list(phi1=10000,phi2=-3.30,phi3=.2),trace=TRUE)
print(j)
#summary(wilson)
#set parameters
variable1<-summary(wilson)$coef[1,1]
sig1<-summary(wilson)$coef[1,2]
variable2<-summary(wilson)$coef[2,1]
sig2<-summary(wilson)$coef[3,2]
variable3<-summary(wilson)$coef[3,1]
sig3<-summary(wilson)$coef[3,2]
phi1<-rnorm(1, mean = variable1, sd = sig1)
phi2<-rnorm(1, mean = variable2, sd = sig2)
phi3<-rnorm(1, mean = variable3, sd = sig3)
yFit<-phi1/(1+exp(-(phi2+phi3*xFit)))
yFitDerivate<-phi1*phi3*(1+exp(-(phi2+phi3*xFit)))**(-2)*exp(-(phi2+phi3*xFit))
lines(xFit, yFit, col = rgb(54/255,144/255,192/255,0.05))
}
points(Original_Casos$diascasos, Original_Casos$casosAcumul)
unlink("NULL")
#sink("NULL")
for(j in seq(1,50)){
yAleatorio = rnorm(length(casosAcumul),casosAcumul, casosAcumulInc)
#lm(log(y)~x)
#plot(y~x)
#coef(lm(log(y/10000)~x, data = data_to_fit))
# We need initial parameters
wilson<-nls(yAleatorio~phi1/(1+exp(-(phi2+phi3*x))),start=list(phi1=10000,phi2=-3.30,phi3=.2),trace=TRUE)
print(j)
#summary(wilson)
#set parameters
variable1<-summary(wilson)$coef[1,1]
sig1<-summary(wilson)$coef[1,2]
variable2<-summary(wilson)$coef[2,1]
sig2<-summary(wilson)$coef[3,2]
variable3<-summary(wilson)$coef[3,1]
sig3<-summary(wilson)$coef[3,2]
phi1<-rnorm(1, mean = variable1, sd = sig1)
phi2<-rnorm(1, mean = variable2, sd = sig2)
phi3<-rnorm(1, mean = variable3, sd = sig3)
yFit<-phi1/(1+exp(-(phi2+phi3*xFit)))
yFitDerivate<-phi1*phi3*(1+exp(-(phi2+phi3*xFit)))**(-2)*exp(-(phi2+phi3*xFit))
lines(xFit, yFit, col = rgb(54/255,144/255,192/255,0.05))
}
#sink("NULL")
for(j in seq(1,50)){
yAleatorio = rnorm(length(casosAcumul),casosAcumul, casosAcumulInc)
#lm(log(y)~x)
#plot(y~x)
#coef(lm(log(y/10000)~x, data = data_to_fit))
# We need initial parameters
wilson<-nls(yAleatorio~phi1/(1+exp(-(phi2+phi3*x))),start=list(phi1=10000,phi2=-3.30,phi3=.2),trace=TRUE)
print(j)
#summary(wilson)
#set parameters
variable1<-summary(wilson)$coef[1,1]
sig1<-summary(wilson)$coef[1,2]
variable2<-summary(wilson)$coef[2,1]
sig2<-summary(wilson)$coef[3,2]
variable3<-summary(wilson)$coef[3,1]
sig3<-summary(wilson)$coef[3,2]
phi1<-rnorm(1, mean = variable1, sd = sig1)
phi2<-rnorm(1, mean = variable2, sd = sig2)
phi3<-rnorm(1, mean = variable3, sd = sig3)
yFit<-phi1/(1+exp(-(phi2+phi3*xFit)))
yFitDerivate<-phi1*phi3*(1+exp(-(phi2+phi3*xFit)))**(-2)*exp(-(phi2+phi3*xFit))
lines(xFit, yFit, col = rgb(54/255,144/255,192/255,0.05))
}
rm(list = ls())
# Graficar crecimiento de coronaVirus
# Félix Ernesto Charry Pastrana
#these libraries need to be loaded
library(utils)
library(httr)
library(RColorBrewer)
# Mac FECHP
directory="/Users/F.E.CharryPastrana/Documents/GitHub_PersonalCodes/Covid-19"
directory=paste0(directory,"/Proyection_Results")
setwd(directory)
#download the dataset from the ECDC website to a local temporary file
GET("https://opendata.ecdc.europa.eu/covid19/casedistribution/csv",
authenticate(":", ":", type="ntlm"),
write_disk(tf <- tempfile(fileext = ".csv")))
#read the Dataset sheet into “R”. The dataset will be called "data".
data <- read.csv(tf)
# Extrayendo la información del país de interés
paises = c('China', 'Colombia')
paises = 'China'
for(ii in seq(1,length(paises))){
pais = paises[ii]
print(paises[ii])
j = 1
startFlag = 0
jcasos = 1
jmuertos = 1
diascasos    <- vector(mode="numeric", length=0)
diasmuertos    <- vector(mode="numeric", length=0)
casos   <- vector(mode="numeric", length=0)
muertos <- vector(mode="numeric", length=0)
# Extrayendo informacion
for(i in seq(nrow(data),1)){
if( (as.character(data$countriesAndTerritories[i]) == pais) ){
dia = j
if(as.numeric(data$cases[i]) != 0){
diascasos[jcasos] = dia
casos[jcasos]     = as.numeric(data$cases[i])
jcasos = jcasos + 1
startFlag = 1
}
if(as.numeric(data$deaths[i]) != 0){
diasmuertos[jmuertos] = dia
muertos[jmuertos]   = as.numeric(data$deaths[i])
jmuertos = jmuertos+1
startFlag = 1
}
j = j+1
if(startFlag==0){j=1}
}
}
casosInc = sqrt(casos)
muertosInc = sqrt(muertos)
casosAcumul <- vector(mode="numeric", length=0)
casosAcumulInc <- vector(mode="numeric", length=0)
muertosAcumul <- vector(mode="numeric", length=0)
muertosAcumulInc <- vector(mode="numeric", length=0)
casosAcumul[1] = casos[1]
casosAcumulInc[1] = casosInc[1]
for(i in seq(2,length(casos))){
casosAcumul[i] = casos[i] + casosAcumul[i-1]
casosAcumulInc[i] = sqrt( casosInc[i]**2 + casosAcumulInc[i-1]**2)
}
muertosAcumul[1] = muertos[1]
muertosAcumulInc[1] = muertosInc[1]
for(i in seq(2,length(muertos))){
muertosAcumul[i] = muertos[i] + muertosAcumul[i-1]
muertosAcumulInc[i] = sqrt( muertosInc[i]**2 + muertosAcumulInc[i-1]**2)
}
Original_Casos = data.frame(diascasos,
casos, casosInc,
casosAcumul, casosAcumulInc)
Original_Muertes  = data.frame(diasmuertos,
muertos, muertosInc,
muertosAcumul, muertosAcumulInc)
}
x = diascasos
y = casosAcumul
xLimit = c(0,130)
yLimit = c(70000, 90000)
plot(Original_Casos$diascasos, Original_Casos$casosAcumul,
xlim = xLimit, ylim = yLimit)
xFit<-c(min(xLimit):max(xLimit)) #construct a range of x values bounded by the data
#sink("NULL")
for(j in seq(1,50)){
yAleatorio = rnorm(length(casosAcumul),casosAcumul, casosAcumulInc)
#lm(log(y)~x)
#plot(y~x)
#coef(lm(log(y/10000)~x, data = data_to_fit))
# We need initial parameters
wilson<-nls(yAleatorio~phi1/(1+exp(-(phi2+phi3*x))),start=list(phi1=10000,phi2=-3.30,phi3=.2),trace=TRUE)
print(j)
#summary(wilson)
#set parameters
variable1<-summary(wilson)$coef[1,1]
sig1<-summary(wilson)$coef[1,2]
variable2<-summary(wilson)$coef[2,1]
sig2<-summary(wilson)$coef[3,2]
variable3<-summary(wilson)$coef[3,1]
sig3<-summary(wilson)$coef[3,2]
phi1<-rnorm(1, mean = variable1, sd = sig1)
phi2<-rnorm(1, mean = variable2, sd = sig2)
phi3<-rnorm(1, mean = variable3, sd = sig3)
yFit<-phi1/(1+exp(-(phi2+phi3*xFit)))
yFitDerivate<-phi1*phi3*(1+exp(-(phi2+phi3*xFit)))**(-2)*exp(-(phi2+phi3*xFit))
lines(xFit, yFit, col = rgb(54/255,144/255,192/255,0.05))
}
points(Original_Casos$diascasos, Original_Casos$casosAcumul)
xLimit = c(0,130)
yLimit = c(70000, 90000)
plot(Original_Casos$diascasos, Original_Casos$casosAcumul,
xlim = xLimit, ylim = yLimit)
xFit<-c(min(xLimit):max(xLimit)) #construct a range of x values bounded by the data
#sink("NULL")
for(j in seq(1,50)){
yAleatorio = rnorm(length(casosAcumul),casosAcumul, casosAcumulInc)
#lm(log(y)~x)
#plot(y~x)
#coef(lm(log(y/10000)~x, data = data_to_fit))
# We need initial parameters
wilson<-nls(yAleatorio~phi1/(1+exp(-(phi2+phi3*x))),
start=list(phi1=10000,phi2=-3.30,phi3=.2),trace=TRUE)
print(j)
#summary(wilson)
#set parameters
variable1<-summary(wilson)$coef[1,1]
sig1<-summary(wilson)$coef[1,2]
variable2<-summary(wilson)$coef[2,1]
sig2<-summary(wilson)$coef[3,2]
variable3<-summary(wilson)$coef[3,1]
sig3<-summary(wilson)$coef[3,2]
phi1<-rnorm(1, mean = variable1, sd = sig1)
phi2<-rnorm(1, mean = variable2, sd = sig2)
phi3<-rnorm(1, mean = variable3, sd = sig3)
yFit<-phi1/(1+exp(-(phi2+phi3*xFit)))
yFitDerivate<-phi1*phi3*(1+exp(-(phi2+phi3*xFit)))**(-2)*exp(-(phi2+phi3*xFit))
lines(xFit, yFit, col = rgb(54/255,144/255,192/255,0.05))
}
points(Original_Casos$diascasos, Original_Casos$casosAcumul)
plot(Original_Casos$diascasos, Original_Casos$casosAcumul,
xlim = xLimit, ylim = yLimit)
xFit<-c(min(xLimit):max(xLimit)) #construct a range of x values bounded by the data
#sink("NULL")
for(j in seq(1,50)){
yAleatorio = rnorm(length(casosAcumul),casosAcumul, casosAcumulInc)
#lm(log(y)~x)
#plot(y~x)
#coef(lm(log(y/10000)~x, data = data_to_fit))
# We need initial parameters
wilson<-nls(yAleatorio~phi1/(1+exp(-(phi2+phi3*x))),
start=list(phi1=10000,phi2=-3.30,phi3=.2),trace=TRUE)
print(j)
#summary(wilson)
#set parameters
variable1<-summary(wilson)$coef[1,1]
sig1<-summary(wilson)$coef[1,2]
variable2<-summary(wilson)$coef[2,1]
sig2<-summary(wilson)$coef[3,2]
variable3<-summary(wilson)$coef[3,1]
sig3<-summary(wilson)$coef[3,2]
phi1<-rnorm(1, mean = variable1, sd = sig1)
phi2<-rnorm(1, mean = variable2, sd = sig2)
phi3<-rnorm(1, mean = variable3, sd = sig3)
yFit<-phi1/(1+exp(-(phi2+phi3*xFit)))
yFitDerivate<-phi1*phi3*(1+exp(-(phi2+phi3*xFit)))**(-2)*exp(-(phi2+phi3*xFit))
lines(xFit, yFit, col = rgb(54/255,144/255,192/255,0.05))
}
#sink("NULL")
for(j in seq(1,150)){
yAleatorio = rnorm(length(casosAcumul),casosAcumul, casosAcumulInc)
#lm(log(y)~x)
#plot(y~x)
#coef(lm(log(y/10000)~x, data = data_to_fit))
# We need initial parameters
wilson<-nls(yAleatorio~phi1/(1+exp(-(phi2+phi3*x))),
start=list(phi1=10000,phi2=-3.30,phi3=.2),trace=TRUE)
print(j)
#summary(wilson)
#set parameters
variable1<-summary(wilson)$coef[1,1]
sig1<-summary(wilson)$coef[1,2]
variable2<-summary(wilson)$coef[2,1]
sig2<-summary(wilson)$coef[3,2]
variable3<-summary(wilson)$coef[3,1]
sig3<-summary(wilson)$coef[3,2]
phi1<-rnorm(1, mean = variable1, sd = sig1)
phi2<-rnorm(1, mean = variable2, sd = sig2)
phi3<-rnorm(1, mean = variable3, sd = sig3)
yFit<-phi1/(1+exp(-(phi2+phi3*xFit)))
yFitDerivate<-phi1*phi3*(1+exp(-(phi2+phi3*xFit)))**(-2)*exp(-(phi2+phi3*xFit))
lines(xFit, yFit, col = rgb(54/255,144/255,192/255,0.05))
}
points(Original_Casos$diascasos, Original_Casos$casosAcumul)
#sink("NULL")
for(j in seq(1,500)){
yAleatorio = rnorm(length(casosAcumul),casosAcumul, casosAcumulInc)
#lm(log(y)~x)
#plot(y~x)
#coef(lm(log(y/10000)~x, data = data_to_fit))
# We need initial parameters
wilson<-nls(yAleatorio~phi1/(1+exp(-(phi2+phi3*x))),
start=list(phi1=10000,phi2=-3.30,phi3=.2),trace=TRUE)
print(j)
#summary(wilson)
#set parameters
variable1<-summary(wilson)$coef[1,1]
sig1<-summary(wilson)$coef[1,2]
variable2<-summary(wilson)$coef[2,1]
sig2<-summary(wilson)$coef[3,2]
variable3<-summary(wilson)$coef[3,1]
sig3<-summary(wilson)$coef[3,2]
phi1<-rnorm(1, mean = variable1, sd = sig1)
phi2<-rnorm(1, mean = variable2, sd = sig2)
phi3<-rnorm(1, mean = variable3, sd = sig3)
yFit<-phi1/(1+exp(-(phi2+phi3*xFit)))
yFitDerivate<-phi1*phi3*(1+exp(-(phi2+phi3*xFit)))**(-2)*exp(-(phi2+phi3*xFit))
lines(xFit, yFit, col = rgb(54/255,144/255,192/255,0.05))
}
points(Original_Casos$diascasos, Original_Casos$casosAcumul)
xLimit = c(0,130)
yLimit = c(0, 90000)
plot(Original_Casos$diascasos, Original_Casos$casosAcumul,
xlim = xLimit, ylim = yLimit)
xFit<-c(min(xLimit):max(xLimit)) #construct a range of x values bounded by the data
#sink("NULL")
for(j in seq(1,500)){
yAleatorio = rnorm(length(casosAcumul),casosAcumul, casosAcumulInc)
#lm(log(y)~x)
#plot(y~x)
#coef(lm(log(y/10000)~x, data = data_to_fit))
# We need initial parameters
wilson<-nls(yAleatorio~phi1/(1+exp(-(phi2+phi3*x))),
start=list(phi1=10000,phi2=-3.30,phi3=.2),trace=TRUE)
print(j)
#summary(wilson)
#set parameters
variable1<-summary(wilson)$coef[1,1]
sig1<-summary(wilson)$coef[1,2]
variable2<-summary(wilson)$coef[2,1]
sig2<-summary(wilson)$coef[3,2]
variable3<-summary(wilson)$coef[3,1]
sig3<-summary(wilson)$coef[3,2]
phi1<-rnorm(1, mean = variable1, sd = sig1)
phi2<-rnorm(1, mean = variable2, sd = sig2)
phi3<-rnorm(1, mean = variable3, sd = sig3)
yFit<-phi1/(1+exp(-(phi2+phi3*xFit)))
yFitDerivate<-phi1*phi3*(1+exp(-(phi2+phi3*xFit)))**(-2)*exp(-(phi2+phi3*xFit))
lines(xFit, yFit, col = rgb(54/255,144/255,192/255,0.05))
}
points(Original_Casos$diascasos, Original_Casos$casosAcumul)
View(data)
paises = 'South_Korea'
for(ii in seq(1,length(paises))){
pais = paises[ii]
print(paises[ii])
j = 1
startFlag = 0
jcasos = 1
jmuertos = 1
diascasos    <- vector(mode="numeric", length=0)
diasmuertos    <- vector(mode="numeric", length=0)
casos   <- vector(mode="numeric", length=0)
muertos <- vector(mode="numeric", length=0)
# Extrayendo informacion
for(i in seq(nrow(data),1)){
if( (as.character(data$countriesAndTerritories[i]) == pais) ){
dia = j
if(as.numeric(data$cases[i]) != 0){
diascasos[jcasos] = dia
casos[jcasos]     = as.numeric(data$cases[i])
jcasos = jcasos + 1
startFlag = 1
}
if(as.numeric(data$deaths[i]) != 0){
diasmuertos[jmuertos] = dia
muertos[jmuertos]   = as.numeric(data$deaths[i])
jmuertos = jmuertos+1
startFlag = 1
}
j = j+1
if(startFlag==0){j=1}
}
}
casosInc = sqrt(casos)
muertosInc = sqrt(muertos)
casosAcumul <- vector(mode="numeric", length=0)
casosAcumulInc <- vector(mode="numeric", length=0)
muertosAcumul <- vector(mode="numeric", length=0)
muertosAcumulInc <- vector(mode="numeric", length=0)
casosAcumul[1] = casos[1]
casosAcumulInc[1] = casosInc[1]
for(i in seq(2,length(casos))){
casosAcumul[i] = casos[i] + casosAcumul[i-1]
casosAcumulInc[i] = sqrt( casosInc[i]**2 + casosAcumulInc[i-1]**2)
}
muertosAcumul[1] = muertos[1]
muertosAcumulInc[1] = muertosInc[1]
for(i in seq(2,length(muertos))){
muertosAcumul[i] = muertos[i] + muertosAcumul[i-1]
muertosAcumulInc[i] = sqrt( muertosInc[i]**2 + muertosAcumulInc[i-1]**2)
}
Original_Casos = data.frame(diascasos,
casos, casosInc,
casosAcumul, casosAcumulInc)
Original_Muertes  = data.frame(diasmuertos,
muertos, muertosInc,
muertosAcumul, muertosAcumulInc)
}
x = diascasos
y = casosAcumul
xLimit = c(0,130)
yLimit = c(0, 90000)
plot(Original_Casos$diascasos, Original_Casos$casosAcumul,
xlim = xLimit, ylim = yLimit)
yLimit = c(0, 20000)
plot(Original_Casos$diascasos, Original_Casos$casosAcumul,
xlim = xLimit, ylim = yLimit)
yLimit = c(0, 15000)
plot(Original_Casos$diascasos, Original_Casos$casosAcumul,
xlim = xLimit, ylim = yLimit)
xFit<-c(min(xLimit):max(xLimit)) #construct a range of x values bounded by the data
#sink("NULL")
for(j in seq(1,500)){
yAleatorio = rnorm(length(casosAcumul),casosAcumul, casosAcumulInc)
#lm(log(y)~x)
#plot(y~x)
#coef(lm(log(y/10000)~x, data = data_to_fit))
# We need initial parameters
wilson<-nls(yAleatorio~phi1/(1+exp(-(phi2+phi3*x))),
start=list(phi1=10000,phi2=-3.30,phi3=.2),trace=TRUE)
print(j)
#summary(wilson)
#set parameters
variable1<-summary(wilson)$coef[1,1]
sig1<-summary(wilson)$coef[1,2]
variable2<-summary(wilson)$coef[2,1]
sig2<-summary(wilson)$coef[3,2]
variable3<-summary(wilson)$coef[3,1]
sig3<-summary(wilson)$coef[3,2]
phi1<-rnorm(1, mean = variable1, sd = sig1)
phi2<-rnorm(1, mean = variable2, sd = sig2)
phi3<-rnorm(1, mean = variable3, sd = sig3)
yFit<-phi1/(1+exp(-(phi2+phi3*xFit)))
yFitDerivate<-phi1*phi3*(1+exp(-(phi2+phi3*xFit)))**(-2)*exp(-(phi2+phi3*xFit))
lines(xFit, yFit, col = rgb(54/255,144/255,192/255,0.05))
}
coef(lm(log(y/10000)~x, data = data_to_fit))
x = diascasos
y = casosAcumul
coef(lm(log(y/10000)~x, data = data_to_fit))
coef(lm(log(y/10000)~x)
# We need initial parameters
wilson<-nls(yAleatorio~phi1/(1+exp(-(phi2+phi3*x))),
start=list(phi1=10000,phi2=-3.30,phi3=.2),trace=TRUE)
print(j)
#summary(wilson)
#set parameters
variable1<-summary(wilson)$coef[1,1]
sig1<-summary(wilson)$coef[1,2]
variable2<-summary(wilson)$coef[2,1]
sig2<-summary(wilson)$coef[3,2]
variable3<-summary(wilson)$coef[3,1]
sig3<-summary(wilson)$coef[3,2]
phi1<-rnorm(1, mean = variable1, sd = sig1)
phi2<-rnorm(1, mean = variable2, sd = sig2)
phi3<-rnorm(1, mean = variable3, sd = sig3)
yFit<-phi1/(1+exp(-(phi2+phi3*xFit)))
yFitDerivate<-phi1*phi3*(1+exp(-(phi2+phi3*xFit)))**(-2)*exp(-(phi2+phi3*xFit))
lines(xFit, yFit, col = rgb(54/255,144/255,192/255,0.05))
}
points(Original_Casos$diascasos, Original_Casos$casosAcumul)
coef(lm(log(y/10000)~x))
coef
